//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sales
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<SalesOrder> SalesOrders { get; set; }
        public virtual DbSet<Part> Parts { get; set; }
        public virtual DbSet<SalesOrderPart> SalesOrderParts { get; set; }
        public virtual DbSet<SalesReturn> SalesReturns { get; set; }
        public virtual DbSet<Shipment> Shipments { get; set; }
        public virtual DbSet<ShipmentPart> ShipmentParts { get; set; }
        public virtual DbSet<SoSummary> SoSummaries { get; set; }
    
        [DbFunction("Entities", "SoDetail")]
        public virtual IQueryable<SoDetail_Result> SoDetail(Nullable<int> salesOrderNum)
        {
            var salesOrderNumParameter = salesOrderNum.HasValue ?
                new ObjectParameter("SalesOrderNum", salesOrderNum) :
                new ObjectParameter("SalesOrderNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SoDetail_Result>("[Entities].[SoDetail](@SalesOrderNum)", salesOrderNumParameter);
        }
    
        public virtual int SOP(Nullable<int> salesOrderNumber, ObjectParameter orderTotal)
        {
            var salesOrderNumberParameter = salesOrderNumber.HasValue ?
                new ObjectParameter("SalesOrderNumber", salesOrderNumber) :
                new ObjectParameter("SalesOrderNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SOP", salesOrderNumberParameter, orderTotal);
        }
    }
}
